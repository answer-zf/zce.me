// -----------------------------------------------------------------------------
// This file contains all application-wide Sass functions.
// -----------------------------------------------------------------------------

@function gray($key: 3) {
  @return map-get($grays, $key);
}

@function color($key: primary) {
  @return map-get($colors, $key);
}

@function space($key: 3) {
  @return map-get($spaces, $key);
}

@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}

@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@function urlencode($input) {
  $map: (
  '%': '%25',
  '<': '%3C',
  '>': '%3E',
  ' ': '%20',
  '!': '%21',
  '*': '%2A',
  '\'': '%27',
  '"': '%22',
  '(': '%28',
  ')': '%29',
  ';': '%3B',
  ':': '%3A',
  '@': '%40',
  '&': '%26',
  '=': '%3D',
  '+': '%2B',
  '$': '%24',
  ',': '%2C',
  '/': '%2F',
  '?': '%3F',
  '#': '%23',
  '[': '%5B',
  ']': '%5D'
  );
  $new: $input;
  @each $search, $replace in $map {
    $new: str-replace($new, $search, $replace);
  }

  @return $new;
}

@function escape-svg($svg) {
  @return 'data:image/svg+xml;charset=utf-8,#{urlencode($svg)}';
}
